# Generated by Django 4.2.23 on 2025-10-13 00:20

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('asset', '0002_alter_asset_task'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', models.CharField(help_text='Resource name of the ad. Ad resource names have the form: customers/{customer_id}/ads/{ad_id}', max_length=255, unique=True)),
                ('google_ads_id', models.BigIntegerField(blank=True, help_text='Output only. The ID of the ad.', null=True)),
                ('name', models.CharField(blank=True, help_text='Immutable. The name of the ad. This is only used to be able to identify the ad.', max_length=255)),
                ('display_url', models.CharField(blank=True, help_text='The URL that appears in the ad description for some ad formats.', max_length=255)),
                ('added_by_google_ads', models.BooleanField(default=False, help_text='Output only. Indicates if this ad was automatically added by Google Ads and not by a user.')),
                ('type', models.CharField(blank=True, choices=[('VIDEO_AD', 'Video ad.'), ('IMAGE_AD', 'Image ad.'), ('RESPONSIVE_SEARCH_AD', 'Responsive search ad.'), ('RESPONSIVE_DISPLAY_AD', 'Responsive display ad.'), ('VIDEO_RESPONSIVE_AD', 'Video responsive ad.')], help_text='Output only. The type of ad.', max_length=50)),
                ('device_preference', models.CharField(blank=True, choices=[('UNSPECIFIED', 'Not specified.'), ('UNKNOWN', 'Used for return value only. Represents value unknown in this version.'), ('MOBILE', 'Mobile devices with full browsers.'), ('TABLET', 'Tablets with full browsers.'), ('DESKTOP', 'Computers.'), ('CONNECTED_TV', 'Connected TVs.'), ('OTHER', 'Other device types.')], help_text='The device preference for the ad.', max_length=20)),
                ('system_managed_resource_source', models.CharField(blank=True, choices=[('UNSPECIFIED', 'Not specified.'), ('UNKNOWN', 'Used for return value only. Represents value unknown in this version.'), ('AD_VARIATIONS', 'Created by ad variations.')], help_text='Output only. If this ad is system managed, then this field will indicate the source.', max_length=30)),
                ('final_urls', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2048), blank=True, default=list, help_text='The list of possible final URLs after all cross-domain redirects for the ad.', size=None)),
                ('final_mobile_urls', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2048), blank=True, default=list, help_text='The list of possible final mobile URLs after all cross-domain redirects for the ad.', size=None)),
                ('tracking_url_template', models.CharField(blank=True, help_text='The URL template for constructing a tracking URL.', max_length=2048)),
                ('final_url_suffix', models.CharField(blank=True, help_text='The suffix to use when constructing a final URL.', max_length=2048)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_REVIEW', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published')], default='DRAFT', help_text='Ad status for workflow management', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this ad', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_google_ads_ads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdImageAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(help_text='The Asset resource name of this image', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AdTextAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Asset text', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AdVideoAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(help_text='The Asset resource name of this video', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='InFeedVideoAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(help_text='The headline of the ad', max_length=255)),
                ('description1', models.CharField(help_text='First text line for the ad', max_length=255)),
                ('description2', models.CharField(help_text='Second text line for the ad', max_length=255)),
                ('thumbnail', models.CharField(choices=[('DEFAULT_THUMBNAIL', 'The default thumbnail. Can be auto-generated or user-uploaded.'), ('THUMBNAIL_1', 'Thumbnail 1, generated from the video.'), ('THUMBNAIL_2', 'Thumbnail 2, generated from the video.'), ('THUMBNAIL_3', 'Thumbnail 3, generated from the video.')], help_text='Video thumbnail image to use', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='VideoOutstreamAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(help_text='The headline of the ad', max_length=255)),
                ('description', models.CharField(help_text='The description line', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='VideoTrueViewInStreamAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_button_label', models.CharField(blank=True, help_text="Label on the CTA button taking the user to the video ad's final URL", max_length=255)),
                ('action_headline', models.CharField(blank=True, help_text='Additional text displayed with the CTA button', max_length=255)),
                ('companion_banner', models.ForeignKey(blank=True, help_text='The image assets of the companion banner used with the ad', null=True, on_delete=django.db.models.deletion.SET_NULL, to='google_ads.adimageasset')),
            ],
        ),
        migrations.CreateModel(
            name='VideoResponsiveAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breadcrumb1', models.CharField(blank=True, help_text='First part of text that appears in the ad with the displayed URL', max_length=255)),
                ('breadcrumb2', models.CharField(blank=True, help_text='Second part of text that appears in the ad with the displayed URL', max_length=255)),
                ('call_to_actions', models.ManyToManyField(blank=True, help_text='Text asset used for the button (only one value supported)', related_name='video_responsive_ad_call_to_actions', to='google_ads.adtextasset')),
                ('companion_banners', models.ManyToManyField(blank=True, help_text='Image asset used for the companion banner (only one value supported)', related_name='video_responsive_ad_companion_banners', to='google_ads.adimageasset')),
                ('descriptions', models.ManyToManyField(blank=True, help_text='Text asset used for the description (only one value supported)', related_name='video_responsive_ad_descriptions', to='google_ads.adtextasset')),
                ('headlines', models.ManyToManyField(blank=True, help_text='Text asset used for the short headline (only one value supported)', related_name='video_responsive_ad_headlines', to='google_ads.adtextasset')),
                ('long_headlines', models.ManyToManyField(blank=True, help_text='Text asset used for the long headline (only one value supported)', related_name='video_responsive_ad_long_headlines', to='google_ads.adtextasset')),
                ('videos', models.ManyToManyField(blank=True, help_text='YouTube video asset used for the ad (only one value supported)', related_name='video_responsive_ad_videos', to='google_ads.advideoasset')),
            ],
        ),
        migrations.CreateModel(
            name='VideoNonSkippableInStreamAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_button_label', models.CharField(blank=True, help_text="Label on the CTA button taking the user to the video ad's final URL", max_length=255)),
                ('action_headline', models.CharField(blank=True, help_text='Additional text displayed with the CTA button', max_length=255)),
                ('companion_banner', models.ForeignKey(blank=True, help_text='The image assets of the companion banner used with the ad', null=True, on_delete=django.db.models.deletion.SET_NULL, to='google_ads.adimageasset')),
            ],
        ),
        migrations.CreateModel(
            name='VideoBumperInStreamAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_button_label', models.CharField(blank=True, help_text="Label on the CTA button taking the user to the video ad's final URL", max_length=255)),
                ('action_headline', models.CharField(blank=True, help_text='Additional text displayed with the CTA button', max_length=255)),
                ('companion_banner', models.ForeignKey(blank=True, help_text='The image assets of the companion banner used with the ad', null=True, on_delete=django.db.models.deletion.SET_NULL, to='google_ads.adimageasset')),
            ],
        ),
        migrations.CreateModel(
            name='VideoAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_asset_info', models.JSONField(blank=True, help_text='Additional video asset information', null=True)),
                ('format_bumper', models.OneToOneField(blank=True, help_text='VideoBumperInStreamAdInfo format', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.videobumperinstreamadinfo')),
                ('format_in_feed', models.OneToOneField(blank=True, help_text='InFeedVideoAdInfo format', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.infeedvideoadinfo')),
                ('format_in_stream', models.OneToOneField(blank=True, help_text='VideoTrueViewInStreamAdInfo format', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.videotrueviewinstreamadinfo')),
                ('format_non_skippable', models.OneToOneField(blank=True, help_text='VideoNonSkippableInStreamAdInfo format', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.videononskippableinstreamadinfo')),
                ('format_out_stream', models.OneToOneField(blank=True, help_text='VideoOutstreamAdInfo format', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.videooutstreamadinfo')),
                ('video_asset', models.ForeignKey(blank=True, help_text='The Asset resource name of this video (AdVideoAsset.asset)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='google_ads.advideoasset')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsiveSearchAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path1', models.CharField(blank=True, help_text='First part of text that can be appended to the URL in the ad', max_length=15)),
                ('path2', models.CharField(blank=True, help_text='Second part of text that can be appended to the URL in the ad', max_length=15)),
                ('descriptions', models.ManyToManyField(blank=True, help_text='List of text assets for descriptions (max 4)', related_name='responsive_search_ad_descriptions', to='google_ads.adtextasset')),
                ('headlines', models.ManyToManyField(blank=True, help_text='List of text assets for headlines (max 15)', related_name='responsive_search_ad_headlines', to='google_ads.adtextasset')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsiveDisplayAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, help_text='The advertiser/brand name', max_length=25)),
                ('main_color', models.CharField(blank=True, help_text='The main color of the ad in hexadecimal', max_length=7)),
                ('accent_color', models.CharField(blank=True, help_text='The accent color of the ad in hexadecimal', max_length=7)),
                ('allow_flexible_color', models.BooleanField(default=True, help_text="Advertiser's consent to allow flexible color")),
                ('call_to_action_text', models.CharField(blank=True, help_text='The call-to-action text for the ad', max_length=30)),
                ('price_prefix', models.CharField(blank=True, help_text='Prefix before price', max_length=255)),
                ('promo_text', models.CharField(blank=True, help_text='Promotion text used for dynamic formats', max_length=255)),
                ('format_setting', models.CharField(blank=True, choices=[('ALL_FORMATS', 'Text, image and native formats.'), ('NON_NATIVE', 'Text and image formats.'), ('NATIVE', 'Native format, for example, the format rendering is controlled by the publisher and not by Google.')], help_text='Specifies which format the ad will be served in', max_length=20)),
                ('enable_asset_enhancements', models.BooleanField(default=False, help_text='Enable asset enhancements for the ad')),
                ('enable_autogen_video', models.BooleanField(default=False, help_text='Enable automatic video generation')),
                ('control_spec', models.JSONField(blank=True, help_text='Other creative control specifications', null=True)),
                ('descriptions', models.ManyToManyField(blank=True, help_text='Descriptive texts for the ad (1-5 items, max 90 chars each)', related_name='responsive_display_ad_descriptions', to='google_ads.adtextasset')),
                ('headlines', models.ManyToManyField(blank=True, help_text='Short format headlines for the ad (1-5 items, max 30 chars each)', related_name='responsive_display_ad_headlines', to='google_ads.adtextasset')),
                ('logo_images', models.ManyToManyField(blank=True, help_text='Logo images to be used in the ad', related_name='responsive_display_ad_logo_images', to='google_ads.adimageasset')),
                ('long_headline', models.ForeignKey(blank=True, help_text='A required long format headline (max 90 chars)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsive_display_ad_long_headlines', to='google_ads.adtextasset')),
                ('marketing_images', models.ManyToManyField(blank=True, help_text='Marketing images to be used in the ad', related_name='responsive_display_ad_marketing_images', to='google_ads.adimageasset')),
                ('square_logo_images', models.ManyToManyField(blank=True, help_text='Square logo images to be used in the ad', related_name='responsive_display_ad_square_logo_images', to='google_ads.adimageasset')),
                ('square_marketing_images', models.ManyToManyField(blank=True, help_text='Square marketing images to be used in the ad', related_name='responsive_display_ad_square_marketing_images', to='google_ads.adimageasset')),
                ('youtube_videos', models.ManyToManyField(blank=True, help_text='Optional YouTube videos for the ad', related_name='responsive_display_ad_youtube_videos', to='google_ads.advideoasset')),
            ],
        ),
        migrations.CreateModel(
            name='ImageAdInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mime_type', models.CharField(choices=[('IMAGE_JPEG', 'JPEG image.'), ('IMAGE_GIF', 'GIF image.'), ('IMAGE_PNG', 'PNG image.'), ('FLASH', 'Flash.'), ('TEXT_HTML', 'HTML.'), ('PDF', 'PDF.'), ('MSWORD', 'MS Word.'), ('MSEXCEL', 'MS Excel.'), ('RTF', 'RTF.'), ('AUDIO_WAV', 'WAV audio.'), ('AUDIO_MP3', 'MP3 audio.'), ('HTML5_AD_ZIP', 'HTML5 ZIP.')], help_text='The mime type of the image', max_length=30)),
                ('pixel_width', models.BigIntegerField(help_text='Width in pixels of the full size image')),
                ('pixel_height', models.BigIntegerField(help_text='Height in pixels of the full size image')),
                ('image_url', models.CharField(help_text='URL of the full size image', max_length=2048)),
                ('preview_pixel_width', models.BigIntegerField(help_text='Width in pixels of the preview size image')),
                ('preview_pixel_height', models.BigIntegerField(help_text='Height in pixels of the preview size image')),
                ('preview_image_url', models.CharField(help_text='URL of the preview size image', max_length=2048)),
                ('name', models.CharField(help_text='The name of the image', max_length=255)),
                ('data', models.BinaryField(blank=True, help_text='Raw image data as bytes - Union field option 2', null=True)),
                ('ad_id_to_copy_image_from', models.BigIntegerField(blank=True, help_text='An ad ID to copy the image from - Union field option 3', null=True)),
                ('image_asset', models.ForeignKey(blank=True, help_text='The Asset resource name of this image (AdImageAsset.asset) - Union field option 1', null=True, on_delete=django.db.models.deletion.SET_NULL, to='google_ads.adimageasset')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(help_text='Google Ads Customer ID', max_length=20, unique=True)),
                ('descriptive_name', models.CharField(help_text='Customer descriptive name', max_length=255)),
                ('status', models.CharField(choices=[('ENABLED', 'Enabled'), ('CANCELED', 'Canceled'), ('SUSPENDED', 'Suspended'), ('CLOSED', 'Closed')], default='ENABLED', help_text='Customer status', max_length=20)),
                ('created_by', models.ForeignKey(help_text='创建者', on_delete=django.db.models.deletion.CASCADE, related_name='google_ads_customer_accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdPreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='预览访问令牌', max_length=64, unique=True)),
                ('device_type', models.CharField(choices=[('UNSPECIFIED', 'Not specified.'), ('UNKNOWN', 'Used for return value only. Represents value unknown in this version.'), ('MOBILE', 'Mobile devices with full browsers.'), ('TABLET', 'Tablets with full browsers.'), ('DESKTOP', 'Computers.'), ('CONNECTED_TV', 'Connected TVs.'), ('OTHER', 'Other device types.')], default='DESKTOP', help_text='预览设备类型', max_length=20)),
                ('preview_data', models.JSONField(help_text='结构化预览数据')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ad', models.ForeignKey(help_text='关联的广告', on_delete=django.db.models.deletion.CASCADE, related_name='previews', to='google_ads.ad')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建预览的用户', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_google_ads_previews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='ad',
            name='customer_account',
            field=models.ForeignKey(blank=True, help_text='Google Ads Customer Account', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ads', to='google_ads.customeraccount'),
        ),
        migrations.AddField(
            model_name='ad',
            name='image_ad',
            field=models.OneToOneField(blank=True, help_text='ImageAdInfo - Immutable', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.imageadinfo'),
        ),
        migrations.AddField(
            model_name='ad',
            name='media_assets',
            field=models.ManyToManyField(blank=True, help_text='Media assets used in this ad', related_name='google_ads_ads', to='asset.asset'),
        ),
        migrations.AddField(
            model_name='ad',
            name='responsive_display_ad',
            field=models.OneToOneField(blank=True, help_text='ResponsiveDisplayAdInfo', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.responsivedisplayadinfo'),
        ),
        migrations.AddField(
            model_name='ad',
            name='responsive_search_ad',
            field=models.OneToOneField(blank=True, help_text='ResponsiveSearchAdInfo', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.responsivesearchadinfo'),
        ),
        migrations.AddField(
            model_name='ad',
            name='video_ad',
            field=models.OneToOneField(blank=True, help_text='VideoAdInfo', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.videoadinfo'),
        ),
        migrations.AddField(
            model_name='ad',
            name='video_responsive_ad',
            field=models.OneToOneField(blank=True, help_text='VideoResponsiveAdInfo', null=True, on_delete=django.db.models.deletion.CASCADE, to='google_ads.videoresponsiveadinfo'),
        ),
        migrations.CreateModel(
            name='UrlCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_collection_id', models.CharField(help_text='Unique identifier for the URL collection', max_length=255)),
                ('final_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=2048), blank=True, default=list, help_text='Final URLs', size=None)),
                ('final_mobile_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=2048), blank=True, default=list, help_text='Final mobile URLs', size=None)),
                ('tracking_url_template', models.CharField(blank=True, help_text='URL template for tracking', max_length=2048)),
                ('ad', models.ForeignKey(help_text='关联的广告', on_delete=django.db.models.deletion.CASCADE, related_name='url_collections', to='google_ads.ad')),
            ],
            options={
                'unique_together': {('ad', 'url_collection_id')},
            },
        ),
        migrations.CreateModel(
            name='FinalAppUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_type', models.CharField(choices=[('UNSPECIFIED', 'Unspecified'), ('UNKNOWN', 'Unknown'), ('IOS', 'iOS'), ('ANDROID', 'Android')], help_text='The operating system targeted by this URL. Required.', max_length=20)),
                ('url', models.URLField(help_text='The app deep link URL. Required.', max_length=2048)),
                ('ad', models.ForeignKey(help_text='关联的广告', on_delete=django.db.models.deletion.CASCADE, related_name='final_app_urls', to='google_ads.ad')),
            ],
            options={
                'unique_together': {('ad', 'os_type')},
            },
        ),
        migrations.CreateModel(
            name='CustomParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='The key matching the parameter tag name.', max_length=255)),
                ('value', models.CharField(help_text='The value to be substituted.', max_length=255)),
                ('ad', models.ForeignKey(help_text='关联的广告', on_delete=django.db.models.deletion.CASCADE, related_name='url_custom_parameters', to='google_ads.ad')),
            ],
            options={
                'unique_together': {('ad', 'key')},
            },
        ),
        migrations.AddIndex(
            model_name='customeraccount',
            index=models.Index(fields=['status'], name='google_ads__status_e439d0_idx'),
        ),
        migrations.AddIndex(
            model_name='adpreview',
            index=models.Index(fields=['token'], name='google_ads__token_8c0c2e_idx'),
        ),
        migrations.AddIndex(
            model_name='adpreview',
            index=models.Index(fields=['ad', 'device_type'], name='google_ads__ad_id_c3862c_idx'),
        ),
        migrations.AddIndex(
            model_name='ad',
            index=models.Index(fields=['status'], name='google_ads__status_f83014_idx'),
        ),
    ]
