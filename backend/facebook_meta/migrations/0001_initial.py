# Generated by Django 5.2.6 on 2025-10-13 05:14

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdCreativeLinkData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_context', models.CharField(blank=True, default='', help_text='String that represents the ad context provided by advertiser', max_length=255)),
                ('additional_image_index', models.IntegerField(blank=True, help_text='The index (zero based) of the image from the additional images array to use as the ad image for a dynamic product ad', null=True)),
                ('app_link_spec', models.JSONField(blank=True, help_text='Native deeplinks attached to the post', null=True)),
                ('attachment_style', models.CharField(blank=True, choices=[('LINK', 'Link'), ('DEFAULT', 'Default')], default='', help_text='The style of the attachment', max_length=16)),
                ('boosted_product_set_id', models.CharField(blank=True, default='', help_text='Combined with product_set_id to promote a specific Product Set while including other products from the Product Catalog in ads', max_length=64)),
                ('branded_content_shared_to_sponsor_status', models.CharField(blank=True, default='', help_text='The branded content shared to sponsor option', max_length=64)),
                ('branded_content_sponsor_page_id', models.CharField(blank=True, default='', help_text='The branded content sponsor page id', max_length=64)),
                ('branded_content_sponsor_relationship', models.CharField(blank=True, default='', help_text='The branded content sponsor relationship option', max_length=64)),
                ('call_to_action', models.JSONField(blank=True, help_text='An optional call to action button', null=True)),
                ('caption', models.TextField(blank=True, default='', help_text='Link caption. Overwrites the caption under the title in the link')),
                ('child_attachments', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='A 2-5 element array of link objects required for carousel ads', null=True, size=None)),
                ('collection_thumbnails', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='List of Canvas media component IDs and their square cropping information provided by the advertiser for Collection style feed rendering', null=True, size=None)),
                ('customization_rules_spec', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='Customization rules for a dynamic ad', null=True, size=None)),
                ('description', models.TextField(blank=True, default='', help_text='Link description. Overwrites the description in the link when your ad displays')),
                ('event_id', models.CharField(blank=True, default='', help_text='The id of a Facebook event', max_length=64)),
                ('force_single_link', models.BooleanField(default=False, help_text='Whether to force the post to render in a single link format')),
                ('format_option', models.CharField(blank=True, choices=[('carousel_ar_effects', 'Carousel AR Effects'), ('carousel_images_multi_items', 'Carousel Images Multi Items'), ('carousel_images_single_item', 'Carousel Images Single Item'), ('carousel_slideshows', 'Carousel Slideshows'), ('collection_video', 'Collection Video'), ('single_image', 'Single Image')], default='', help_text='Options on how to render your ad', max_length=32)),
                ('image_crops', models.JSONField(blank=True, help_text='How to the image should be cropped', null=True)),
                ('image_hash', models.CharField(blank=True, default='', help_text="Hash of an image in your ad account's image library", max_length=255)),
                ('image_layer_specs', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='How to render image overlays on a dynamic item in Dynamic Ads', null=True, size=None)),
                ('image_overlay_spec', models.JSONField(blank=True, help_text='How to render image overlays on a dynamic item in Dynamic Ads', null=True)),
                ('link', models.CharField(blank=True, default='', help_text='Link url. This url is required to be the same as the CTA link url', max_length=512)),
                ('message', models.TextField(blank=True, default='', help_text='The main body of the post')),
                ('multi_share_end_card', models.BooleanField(default=True, help_text='If set to false, removes the end card which displays the page icon')),
                ('multi_share_optimized', models.BooleanField(default=True, help_text='If set to true, automatically select and order images and links')),
                ('name', models.CharField(blank=True, default='', help_text='Name of the link. Overwrite the title of the link when you preview the ad', max_length=255)),
                ('offer_id', models.CharField(blank=True, default='', help_text='The id of a Facebook native offer', max_length=64)),
                ('page_welcome_message', models.CharField(blank=True, default='', help_text='The customized greeting message that is presented to the user when they are redirected from a click to Messenger or click to Whatsapp ad to the messaging app', max_length=512)),
                ('picture', models.CharField(blank=True, default='', help_text='URL of a picture to use in the post', max_length=512)),
                ('post_click_configuration', models.JSONField(blank=True, help_text='Customized contents provided by the advertiser for the ad post-click experience', null=True)),
                ('preferred_image_tags', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='Select which image to display by its tag, if you have added tags to your images', null=True, size=None)),
                ('preferred_video_tags', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='Selects which video to use, if you have added tags to your video', null=True, size=None)),
                ('retailer_item_ids', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='List of product IDs provided by the advertiser for Collections', null=True, size=None)),
                ('show_multiple_images', models.BooleanField(default=False, help_text='Use with force_single_link = true in order to show a single dynamic item but in carousel format using multiple images from the catalog')),
                ('sponsorship_info', models.JSONField(blank=True, help_text='Give a fallback creative for dynamic ads', null=True)),
                ('use_flexible_image_aspect_ratio', models.BooleanField(default=True, help_text='Default value is true. This field only applies if you do not provide a cropping spec')),
            ],
        ),
        migrations.CreateModel(
            name='AdCreativePhotoData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branded_content_shared_to_sponsor_status', models.CharField(blank=True, default='', help_text='The branded content shared to sponsor option', max_length=64)),
                ('branded_content_sponsor_page_id', models.CharField(blank=True, default='', help_text='ID of a Facebook page.', max_length=64)),
                ('branded_content_sponser_relationship', models.CharField(blank=True, default='', help_text='The branded content sponsor relationship option', max_length=64)),
                ('caption', models.TextField(blank=True, default='', help_text='The description of the image')),
                ('image_hash', models.CharField(blank=True, default='', help_text='Hash of an image in your image library with Facebook.', max_length=255)),
                ('page_welcome_message', models.CharField(blank=True, default='', help_text='A welcome text from page to user on Messenger once a user performs send message action on an ad', max_length=512)),
                ('url', models.CharField(blank=True, default='', help_text='URL of an image to use in the ad.', max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='AdCreativeTextData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='The text of the page post.')),
            ],
        ),
        migrations.CreateModel(
            name='AdCreativeVideoData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_image_index', models.IntegerField(blank=True, help_text='The index (zero based) of the image from the additional images array to use as the ad image for a dynamic product ad', null=True)),
                ('branded_content_shared_to_sponsor_status', models.CharField(blank=True, default='', help_text='The branded content shared to sponsor option', max_length=64)),
                ('branded_content_sponsor_page_id', models.CharField(blank=True, default='', help_text='The branded content sponsor page id.', max_length=64)),
                ('branded_content_sponser_relationship', models.CharField(blank=True, default='', help_text='The branded content sponsor relationship option', max_length=64)),
                ('call_to_action', models.JSONField(blank=True, help_text='An optional call to action.', null=True)),
                ('caption_ids', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='The caption ids of the videos.', null=True, size=None)),
                ('collection_thumbnails', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='The collection thumbnails for a dynamic product ad', null=True, size=None)),
                ('customization_rules_spec', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='Customization rules for a dynamic ad', null=True, size=None)),
                ('image_hash', models.CharField(blank=True, default='', help_text='Hash of an image in your image library with Facebook to use as thumbnail', max_length=255)),
                ('image_url', models.CharField(blank=True, default='', help_text='URL of image to use as thumbnail.', max_length=512)),
                ('link_description', models.TextField(blank=True, default='', help_text='Link description of the video.')),
                ('message', models.TextField(blank=True, default='', help_text='The main body of the video post.')),
                ('offer_id', models.CharField(blank=True, default='', help_text='The id of a Facebook native offer', max_length=64)),
                ('page_welcome_message', models.CharField(blank=True, default='', help_text='A welcome text from page to user on Messenger once a user performs send message action on an ad', max_length=512)),
                ('post_click_configuration', models.JSONField(blank=True, help_text='Customized contents provided by the advertiser for the ad post-click experience', null=True)),
                ('retailer_item_ids', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='List of product IDs provided by the advertiser for Collections', null=True, size=None)),
                ('targeting', models.JSONField(blank=True, help_text='The post gating for the video.', null=True)),
                ('title', models.CharField(blank=True, default='', help_text='The title of the video.', max_length=255)),
                ('video_id', models.CharField(blank=True, default='', help_text='ID of video that user has permission to or a video in ad account video library.', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='AdLabel',
            fields=[
                ('id', models.CharField(help_text='ID of the ad label.', max_length=64, primary_key=True, serialize=False, unique=True)),
                ('created_time', models.DateTimeField(auto_now_add=True, help_text='Date and time the ad label was created.')),
                ('updated_time', models.DateTimeField(auto_now=True, help_text='Date and time the ad label was updated.')),
                ('name', models.CharField(help_text='Name of the ad label.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AdCreative',
            fields=[
                ('id', models.CharField(help_text='Unique ID for an ad creative, numeric string.', max_length=64, primary_key=True, serialize=False, unique=True)),
                ('ad_disclaimer_spec', models.JSONField(blank=True, null=True)),
                ('applink_treatment', models.CharField(blank=True, choices=[('DEFAULT', 'Default'), ('NONE', 'None')], default='', help_text="Used for Dynamic Ads. Specify what action should occur if a person clicks a link in the ad, but the business' app is not installed on their device.", max_length=16)),
                ('asset_feed_spec', models.JSONField(blank=True, null=True)),
                ('authorization_category', models.CharField(blank=True, choices=[('NONE', 'None'), ('DEFAULT', 'Default')], default='', help_text='Specifies whether ad was configured to be labeled as a political ad or not.', max_length=16)),
                ('body', models.TextField(blank=True, default='', help_text='The body of the ad. Not supported for video post creatives')),
                ('branded_content', models.JSONField(blank=True, null=True)),
                ('branded_content_sponsor_page_id', models.CharField(blank=True, default='', help_text='ID for page representing business which runs Branded Content ads.', max_length=64)),
                ('bundle_folder_id', models.CharField(blank=True, default='', help_text="The Dynamic Ad's bundle folder ID", max_length=64)),
                ('call_to_action', models.JSONField(blank=True, null=True)),
                ('call_to_action_type', models.CharField(blank=True, choices=[('OPEN_LINK', 'Open Link'), ('LIKE_PAGE', 'Like Page'), ('SHOP_NOW', 'Shop Now'), ('PLAY_GAME', 'Play Game'), ('INSTALL_APP', 'Install App'), ('USE_APP', 'Use App'), ('CALL', 'Call'), ('CALL_ME', 'Call Me'), ('VIDEO_CALL', 'Video Call'), ('INSTALL_MOBILE_APP', 'Install Mobile App'), ('USE_MOBILE_APP', 'Use Mobile App'), ('MOBILE_DOWNLOAD', 'Mobile Download'), ('BOOK_TRAVEL', 'Book Travel'), ('LISTEN_MUSIC', 'Listen Music'), ('WATCH_VIDEO', 'Watch Video'), ('LEARN_MORE', 'Learn More'), ('SIGN_UP', 'Sign Up'), ('DOWNLOAD', 'Download'), ('WATCH_MORE', 'Watch More'), ('NO_BUTTON', 'No Button'), ('VISIT_PAGES_FEED', 'Visit Pages Feed'), ('CALL_NOW', 'Call Now'), ('APPLY_NOW', 'Apply Now'), ('CONTACT', 'Contact'), ('BUY_NOW', 'Buy Now'), ('GET_OFFER', 'Get Offer'), ('GET_OFFER_VIEW', 'Get Offer View'), ('BUY_TICKETS', 'Buy Tickets'), ('UPDATE_APP', 'Update App'), ('GET_DIRECTIONS', 'Get Directions'), ('BUY', 'Buy'), ('SEND_UPDATES', 'Send Updates'), ('MESSAGE_PAGE', 'Message Page'), ('DONATE', 'Donate'), ('SUBSCRIBE', 'Subscribe'), ('SAY_THANKS', 'Say Thanks'), ('SELL_NOW', 'Sell Now'), ('SHARE', 'Share'), ('DONATE_NOW', 'Donate Now'), ('GET_QUOTE', 'Get Quote'), ('CONTACT_US', 'Contact Us'), ('ORDER_NOW', 'Order Now'), ('START_ORDER', 'Start Order'), ('ADD_TO_CART', 'Add To Cart'), ('VIEW_CART', 'View Cart'), ('VIEW_IN_CART', 'View In Cart'), ('VIDEO_ANNOTATION', 'Video Annotation'), ('RECORD_NOW', 'Record Now'), ('INQUIRE_NOW', 'Inquire Now'), ('CONFIRM', 'Confirm'), ('REFER_FRIENDS', 'Refer Friends'), ('REQUEST_TIME', 'Request Time'), ('GET_SHOWTIMES', 'Get Showtimes'), ('LISTEN_NOW', 'Listen Now'), ('TRY_DEMO', 'Try Demo'), ('WOODHENGE_SUPPORT', 'Woodhenge Support'), ('SOTTO_SUBSCRIBE', 'Sotto Subscribe'), ('FOLLOW_USER', 'Follow User'), ('RAISE_MONEY', 'Raise Money'), ('SEE_SHOP', 'See Shop'), ('GET_DETAILS', 'Get Details'), ('FIND_OUT_MORE', 'Find Out More'), ('VISIT_WEBSITE', 'Visit Website'), ('BROWSE_SHOP', 'Browse Shop'), ('EVENT_RSVP', 'Event Rsvp'), ('WHATSAPP_MESSAGE', 'Whatsapp Message'), ('FOLLOW_NEWS_STORYLINE', 'Follow News Storyline'), ('SEE_MORE', 'See More'), ('BOOK_NOW', 'Book Now'), ('FIND_A_GROUP', 'Find A Group'), ('FIND_YOUR_GROUPS', 'Find Your Groups'), ('PAY_TO_ACCESS', 'Pay To Access'), ('PURCHASE_GIFT_CARDS', 'Purchase Gift Cards'), ('FOLLOW_PAGE', 'Follow Page'), ('SEND_A_GIFT', 'Send A Gift'), ('SWIPE_UP_SHOP', 'Swipe Up Shop'), ('SWIPE_UP_PRODUCT', 'Swipe Up Product'), ('SEND_GIFT_MONEY', 'Send Gift Money'), ('PLAY_GAME_ON_FACEBOOK', 'Play Game On Facebook'), ('GET_STARTED', 'Get Started'), ('OPEN_INSTANT_APP', 'Open Instant App'), ('AUDIO_CALL', 'Audio Call'), ('GET_PROMOTIONS', 'Get Promotions'), ('JOIN_CHANNEL', 'Join Channel'), ('MAKE_AN_APPOINTMENT', 'Make An Appointment'), ('ASK_ABOUT_SERVICES', 'Ask About Services'), ('BOOK_A_CONSULTATION', 'Book A Consultation'), ('GET_A_QUOTE', 'Get A Quote'), ('BUY_VIA_MESSAGE', 'Buy Via Message'), ('ASK_FOR_MORE_INFO', 'Ask For More Info'), ('CHAT_WITH_US', 'Chat With Us'), ('VIEW_PRODUCT', 'View Product'), ('VIEW_CHANNEL', 'View Channel'), ('GET_IN_TOUCH', 'Get In Touch'), ('WATCH_LIVE_VIDEO', 'Watch Live Video'), ('SHOP_WITH_AI', 'Shop With Ai'), ('TRY_ON_WITH_AI', 'Try On With Ai')], default='', help_text='The type of call to action', max_length=32)),
                ('categorization_criteria', models.CharField(blank=True, choices=[('brand', 'Brand')], default='', help_text="The Dynamic Category Ad's categorization field, e.g. brand", max_length=16)),
                ('category_media_source', models.CharField(blank=True, choices=[('NONE', 'None'), ('DEFAULT', 'Default')], default='', help_text="The Dynamic Category Ad's category media source, e.g. user_generated", max_length=16)),
                ('collaborative_ads_lsb_image_bank_id', models.CharField(blank=True, default='', help_text='Used for CPAS local delivery image bank', max_length=64)),
                ('contextual_multi_ads', models.JSONField(blank=True, null=True)),
                ('creative_sourcing_spec', models.JSONField(blank=True, null=True)),
                ('degrees_of_freedom_spec', models.JSONField(blank=True, null=True)),
                ('destination_set_id', models.CharField(blank=True, default='', help_text='The ID of the Product Set for a Destination Catalog that will be used to link with Travel Catalogs', max_length=64)),
                ('dynamic_ad_voice', models.CharField(blank=True, default='', help_text='Used for Store Traffic Objective inside Dynamic Ads. Allows you to control the voice of your ad.', max_length=64)),
                ('effective_authorization_category', models.CharField(blank=True, choices=[('NONE', 'None'), ('DEFAULT', 'Default')], default='', help_text='Specifies whether ad is a political ad or not.', max_length=16)),
                ('effective_instagram_media_id', models.CharField(blank=True, default='', help_text='The ID of an Instagram post to use in an ad', max_length=64)),
                ('effective_object_story_id', models.CharField(blank=True, default='', help_text="The ID of a page post to use in an ad, regardless of whether it's an organic or unpublished page post.", max_length=64)),
                ('enable_direct_install', models.BooleanField(default=False, help_text='Whether Direct Install should be enabled on supported devices')),
                ('enable_launch_instant_app', models.BooleanField(default=False, help_text='Whether Instant App should be enabled on supported devices')),
                ('facebook_branded_content', models.JSONField(blank=True, help_text='Stores fields for Facebook Branded Content', null=True)),
                ('image_crops', models.JSONField(blank=True, help_text='Image crops for ad creative', null=True)),
                ('image_hash', models.CharField(blank=True, default='', help_text='Image hash for ad creative. If provided, do not add image_url.', max_length=255)),
                ('image_url', models.CharField(blank=True, default='', help_text='A URL for the image for this creative.', max_length=512)),
                ('instagram_permalink_url', models.CharField(blank=True, default='', help_text='URL for a post on Instagram you want to run as an ad.', max_length=512)),
                ('instagram_user_id', models.CharField(blank=True, default='', max_length=64)),
                ('interactive_components_spec', models.JSONField(blank=True, help_text='Interactive components spec for ad creative', null=True)),
                ('link_destination_display_url', models.CharField(blank=True, default='', help_text='Overwrites the display URL for link ads when object_url is set to a click tag', max_length=512)),
                ('link_og_id', models.CharField(blank=True, default='', help_text='The Open Graph (OG) ID for the link in this creative if the landing page has OG tags', max_length=64)),
                ('link_url', models.CharField(blank=True, default='', help_text="Identify a specific landing tab on your Facebook page by the Page tab's URL.", max_length=512)),
                ('media_sourcing_spec', models.JSONField(blank=True, help_text='media sourcing spec to allow advertisers to specify additional media from various sources.', null=True)),
                ('messenger_sponsored_message', models.CharField(blank=True, default='', help_text='Used for Messenger sponsored message. JSON string with message for this ad creative.', max_length=512)),
                ('name', models.CharField(help_text="Name of this ad creative as seen in the ad account's library.", max_length=255)),
                ('object_id', models.CharField(blank=True, default='', help_text='ID for Facebook object being promoted with ads or relevant to the ad or ad type.', max_length=64)),
                ('object_store_url', models.CharField(blank=True, default='', help_text='iTunes or Google Play of the destination of an app ad', max_length=512)),
                ('object_story_id', models.CharField(blank=True, default='', help_text='ID of a Facebook Page post to use in an ad.', max_length=64)),
                ('object_type', models.CharField(blank=True, choices=[('APPLICATION', 'Application'), ('DOMAIN', 'Domain'), ('EVENT', 'Event'), ('OFFER', 'Offer'), ('PAGE', 'Page'), ('PHOTO', 'Photo'), ('SHARE', 'Share'), ('STATUS', 'Status'), ('STORE_ITEM', 'Store Item'), ('VIDEO', 'Video'), ('INVALID', 'Invalid'), ('PRIVACY_CHECK_FAIL', 'Privacy Check Fail'), ('POST_DELETED', 'Post Deleted')], default='', help_text='The type of Facebook object you want to advertise.', max_length=32)),
                ('object_url', models.CharField(blank=True, default='', help_text='URL that opens if someone clicks your link on a link ad.', max_length=512)),
                ('page_welcome_message', models.CharField(blank=True, default='', max_length=512)),
                ('photo_album_source_object_story_id', models.CharField(blank=True, default='', max_length=64)),
                ('place_page_set_id', models.CharField(blank=True, default='', help_text='The ID of the page set for this creative.', max_length=64)),
                ('platform_customizations', models.JSONField(blank=True, help_text='Platform customization for ad creative', null=True)),
                ('playable_asset_id', models.CharField(blank=True, default='', help_text='The ID of the playable asset in this creative', max_length=64)),
                ('portrait_customizations', models.JSONField(blank=True, help_text='This field describes the rendering customizations selected for portrait mode ads like IG Stories, FB Stories, IGTV, etc', null=True)),
                ('product_data', models.JSONField(blank=True, null=True)),
                ('product_set_id', models.CharField(blank=True, default='', help_text='Used for Dynamic Ad. An ID for a product set, which groups related products or other items being advertised.', max_length=64)),
                ('recommender_settings', models.JSONField(blank=True, help_text='Used for Dynamic Ads. Settings to display Dynamic ads based on product recommendations.', null=True)),
                ('referral_id', models.CharField(blank=True, default='', max_length=64)),
                ('source_facebook_post_id', models.CharField(blank=True, default='', max_length=64)),
                ('source_instagram_media_id', models.CharField(blank=True, default='', max_length=64)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('IN_PROCESS', 'In Process'), ('WITH_ISSUES', 'With Issues'), ('DELETED', 'Deleted')], help_text='Status of the ad creative', max_length=16)),
                ('template_url', models.CharField(blank=True, default='', help_text='Used for Dynamic Ads when you want to use third-party click tracking.', max_length=512)),
                ('template_url_spec', models.JSONField(blank=True, help_text='Template URL spec for ad creative', null=True)),
                ('threads_user_id', models.CharField(blank=True, default='', max_length=64)),
                ('thumbnail_id', models.CharField(blank=True, default='', max_length=64)),
                ('thumbnail_url', models.CharField(blank=True, default='', help_text='URL for a thumbnail image for this ad creative.', max_length=512)),
                ('title', models.CharField(blank=True, default='', help_text='Title for link ad, which does not belong to a page.', max_length=255)),
                ('url_tags', models.CharField(blank=True, default='', help_text='A set of query string parameters which will replace or be appended to urls clicked from page post ads.', max_length=512)),
                ('user_page_actor_override', models.BooleanField(default=False, help_text='Used for App Ads. If true, we display the Facebook page associated with the app ads.')),
                ('video_id', models.CharField(blank=True, default='', help_text='Facebook object ID for video in this ad creative.', max_length=64)),
                ('object_story_spec_instagram_user_id', models.CharField(blank=True, default='', max_length=64)),
                ('object_story_spec_page_id', models.CharField(blank=True, default='', max_length=64)),
                ('object_story_spec_product_data', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, help_text='Product data for a dynamic ad', null=True, size=None)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_ad_creatives', to=settings.AUTH_USER_MODEL)),
                ('object_story_spec_link_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='link_data_ad_creatives', to='facebook_meta.adcreativelinkdata')),
                ('object_story_spec_template_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_data_ad_creatives', to='facebook_meta.adcreativelinkdata')),
                ('object_story_spec_photo_data', models.ManyToManyField(blank=True, related_name='photo_data_ad_creatives', to='facebook_meta.adcreativephotodata')),
                ('object_story_spec_text_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='text_data_ad_creatives', to='facebook_meta.adcreativetextdata')),
                ('object_story_spec_video_data', models.ManyToManyField(blank=True, related_name='video_data_ad_creatives', to='facebook_meta.adcreativevideodata')),
                ('ad_labels', models.ManyToManyField(blank=True, related_name='creatives', to='facebook_meta.adlabel')),
            ],
        ),
        migrations.CreateModel(
            name='AdCreativePreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(help_text='Link to the ad creative preview', max_length=512)),
                ('token', models.CharField(help_text='Token to access the ad creative preview', max_length=64, unique=True)),
                ('expires_at', models.DateTimeField(help_text='Expiration date of the preview')),
                ('json_spec', models.JSONField(blank=True, help_text='JSON spec for the ad creative preview', null=True)),
                ('status', models.CharField(choices=[('Offline', 'Offline'), ('Active', 'Active')], default='Active', help_text='Status of the ad creative preview', max_length=16)),
                ('days_active', models.IntegerField(choices=[(7, '7'), (14, '14'), (30, '30')], default=30, help_text='Days active of the ad creative preview')),
                ('ad_creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_previews', to='facebook_meta.adcreative')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('ad_creative',), name='unique_preview_per_ad_creative')],
            },
        ),
    ]
