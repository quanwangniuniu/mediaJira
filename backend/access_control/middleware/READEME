# Authorization Middleware

## ‚öôÔ∏è Configuration

1. **Add middleware to `settings.py`**

   ```python
   # backend/settings.py
   MIDDLEWARE = [
       # ... existing middleware ...
       'access_control.middleware.authorization.AuthorizationMiddleware',
   ]
   ```

2. **Include the test URLs** in `urls.py`:

   ```python
   # backend/access_control/urls.py
   from django.urls import path
   from .views import AssetListView, CampaignEditView

   urlpatterns = [
       path('assets/list/', AssetListView.as_view(), name='asset-list'),
       path('campaigns/<int:pk>/edit/', CampaignEditView.as_view(), name='campaign-edit'),
       # ... add other protected routes ...
   ]
   ```

3. **Mount the app URLs** in your project‚Äôs root `urls.py`:

   ```python
   # backend/urls.py
   from django.urls import path, include

   urlpatterns = [
       path('api/', include('access_control.urls')),
       # ... other includes ...
   ]
   ```

---

## üìù Usage

* **Module mapping**: The middleware extracts the module name from the URL path segment immediately after `/api/`. For example, `/api/assets/...` maps to the `ASSET` module.

* **Action mapping**: HTTP methods map to actions by default:

  * `GET` ‚Üí `VIEW`
  * `POST` / `PUT` ‚Üí `EDIT`
  * `PATCH` ‚Üí `APPROVE`
  * `DELETE` ‚Üí `DELETE`
  * URL patterns ending with `/export/` map to `EXPORT`

* **Role validity**: Only active roles (`valid_from <= now <= valid_to` or no `valid_to`) are considered.

* **Permission lookup**: Checks for a `RolePermission` matching the user‚Äôs roles, module, and action.

* Returns `403 JSON` if permission is denied; otherwise, passes through.

---

## üß™ Testing

* Example tests are provided in `access_control/tests/test_middleware.py` using Django‚Äôs `RequestFactory` and temporary URLconf.
* To run:

  ```bash
  cd /backend
  python manage.py test access_control.tests.test_middleware
  ```

---

## üìñ Further Reading

* `access_control/models.py` ‚Äî data model definitions
* `access_control/fixtures/init_data.json` ‚Äî initial seed data for orgs, roles, and permissions

---
