# Generated by Django 4.2.23 on 2025-08-09 08:20

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total budget pool amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('used_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount of budget used from this pool', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(help_text='Currency code (e.g., AUD, USD)', max_length=3)),
                ('ad_channel', models.ForeignKey(help_text='Advertising channel', on_delete=django.db.models.deletion.CASCADE, related_name='budget_pools', to='core.adchannel')),
                ('project', models.ForeignKey(help_text='Associated project ID', on_delete=django.db.models.deletion.CASCADE, related_name='budget_pools', to='core.project')),
            ],
            options={
                'verbose_name': 'Budget Pool',
                'verbose_name_plural': 'Budget Pools',
                'db_table': 'budget_pool',
                'unique_together': {('project', 'ad_channel', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='BudgetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Requested budget amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(help_text='Currency code', max_length=3)),
                ('status', django_fsm.FSMField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('LOCKED', 'Locked')], default='DRAFT', help_text='Current status of the budget request', max_length=50, protected=True)),
                ('submitted_at', models.DateTimeField(blank=True, help_text='Submission timestamp', null=True)),
                ('is_escalated', models.BooleanField(default=False, help_text='Whether the request has been escalated')),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('ad_channel', models.ForeignKey(help_text='Associated ad channel ID', on_delete=django.db.models.deletion.CASCADE, related_name='budget_requests', to='core.adchannel')),
                ('budget_pool', models.ForeignKey(help_text='Associated budget pool', on_delete=django.db.models.deletion.PROTECT, related_name='budget_requests', to='budget_approval.budgetpool')),
                ('current_approver', models.ForeignKey(help_text='Current approver assigned to this request', on_delete=django.db.models.deletion.PROTECT, related_name='pending_budget_requests', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(help_text='Requesting user', on_delete=django.db.models.deletion.CASCADE, related_name='created_budget_requests', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(help_text='Associated task ID', on_delete=django.db.models.deletion.CASCADE, related_name='budget_requests', to='core.task')),
            ],
            options={
                'verbose_name': 'Budget Request',
                'verbose_name_plural': 'Budget Requests',
                'db_table': 'budget_request',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(help_text='Whether approved')),
                ('comment', models.TextField(help_text='Reason for approval or rejection')),
                ('decided_at', models.DateTimeField(auto_now_add=True, help_text='Decision timestamp')),
                ('step_number', models.IntegerField(help_text='Approval step number')),
                ('approved_by', models.ForeignKey(help_text='Approver user ID', on_delete=django.db.models.deletion.CASCADE, related_name='approval_records', to=settings.AUTH_USER_MODEL)),
                ('budget_request', models.ForeignKey(help_text='Associated budget request ID', on_delete=django.db.models.deletion.CASCADE, related_name='approval_records', to='budget_approval.budgetrequest')),
            ],
            options={
                'verbose_name': 'Approval Record',
                'verbose_name_plural': 'Approval Records',
                'db_table': 'approval_record',
                'ordering': ['budget_request', 'step_number'],
            },
        ),
        migrations.CreateModel(
            name='BudgetEscalationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold_amount', models.DecimalField(decimal_places=2, help_text='Escalation threshold amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('threshold_currency', models.CharField(help_text='Threshold currency code', max_length=3)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rule is active')),
                ('budget_pool', models.ForeignKey(help_text='Associated budget pool', on_delete=django.db.models.deletion.CASCADE, related_name='budget_escalation_rules', to='budget_approval.budgetpool')),
                ('escalate_to_role', models.ForeignKey(help_text='Target user role ID for escalation', on_delete=django.db.models.deletion.PROTECT, related_name='budget_escalation_rules', to='core.role')),
            ],
            options={
                'verbose_name': 'Budget Escalation Rule',
                'verbose_name_plural': 'Budget Escalation Rules',
                'db_table': 'budget_escalation_rule',
                'unique_together': {('budget_pool', 'threshold_currency')},
            },
        ),
    ]
