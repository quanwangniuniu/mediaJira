# Generated by Django 4.2.23 on 2025-07-30 14:59

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Campaign name that will be displayed throughout the platform', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the campaign objectives and strategy')),
                ('campaign_type', models.CharField(choices=[('digital_display', 'Digital Display'), ('social_media', 'Social Media'), ('search_engine', 'Search Engine'), ('video', 'Video'), ('audio', 'Audio'), ('print', 'Print'), ('outdoor', 'Outdoor'), ('influencer', 'Influencer Marketing')], default='digital_display', help_text='Type of advertising campaign', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', help_text='Current status of the campaign', max_length=20)),
                ('budget', models.DecimalField(decimal_places=2, help_text='Total allocated budget for the campaign', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('spent_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount spent so far on the campaign', max_digits=12)),
                ('start_date', models.DateTimeField(help_text='When the campaign should start')),
                ('end_date', models.DateTimeField(help_text='When the campaign should end')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('owner', models.ForeignKey(help_text='Primary owner of the campaign', on_delete=django.db.models.deletion.CASCADE, related_name='owned_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=False, help_text='Private notes are only visible to the author')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_notes', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='campaigns.campaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('analyst', 'Analyst'), ('viewer', 'Viewer')], default='viewer', help_text='Role of the user in this campaign', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='campaigns.campaign')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_at'],
                'unique_together': {('campaign', 'user')},
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='team_members',
            field=models.ManyToManyField(help_text='Team members assigned to this campaign', related_name='assigned_campaigns', through='campaigns.CampaignAssignment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CampaignMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('cost_per_click', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('cost_per_impression', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('cost_per_conversion', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('click_through_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.0000')), django.core.validators.MaxValueValidator(Decimal('1.0000'))])),
                ('conversion_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.0000')), django.core.validators.MaxValueValidator(Decimal('1.0000'))])),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='campaigns.campaign')),
            ],
            options={
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['campaign', 'date'], name='campaigns_c_campaig_296e25_idx'), models.Index(fields=['recorded_at'], name='campaigns_c_recorde_ae95e8_idx')],
                'unique_together': {('campaign', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['status'], name='campaigns_c_status_96cb56_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['campaign_type'], name='campaigns_c_campaig_ff160b_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['start_date', 'end_date'], name='campaigns_c_start_d_996cc8_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['owner'], name='campaigns_c_owner_i_dc3130_idx'),
        ),
    ]
