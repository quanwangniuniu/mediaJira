# Generated by Django 4.2.23 on 2025-07-07 01:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('campaigns', '0001_initial'),
    ]

    operations = [
        # Create Organizations table
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent_org_id', models.IntegerField(blank=True, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('is_parent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organizations',
            },
        ),
        
        # Create Teams table
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('organization_id', models.IntegerField()),
                ('desc', models.TextField(blank=True, null=True)),
                ('parent_team_id', models.IntegerField(blank=True, null=True)),
                ('is_parent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'teams',
            },
        ),
        
        # Create Team Members table
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),  # Will FK to User when Dev A creates it
                ('role_id', models.IntegerField(blank=True, null=True)),  # For future role system
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='campaigns.team')),
            ],
            options={
                'db_table': 'team_members',
            },
        ),
        
        # Add foreign key constraints separately
        migrations.RunSQL([
            "ALTER TABLE organizations ADD CONSTRAINT fk_organizations_parent_org_id FOREIGN KEY (parent_org_id) REFERENCES organizations(id) ON DELETE CASCADE;",
            "ALTER TABLE teams ADD CONSTRAINT fk_teams_organization_id FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE;", 
            "ALTER TABLE teams ADD CONSTRAINT fk_teams_parent_team_id FOREIGN KEY (parent_team_id) REFERENCES teams(id) ON DELETE CASCADE;",
            "ALTER TABLE team_members ADD CONSTRAINT fk_team_members_team_id FOREIGN KEY (team_id) REFERENCES teams(id) ON DELETE CASCADE;",
        ]),
        
        # Add indexes for performance
        migrations.RunSQL([
            "CREATE INDEX idx_organizations_parent_org_id ON organizations(parent_org_id);",
            "CREATE INDEX idx_organizations_deleted_at ON organizations(deleted_at);",
            "CREATE INDEX idx_organizations_is_parent ON organizations(is_parent);",
            
            "CREATE INDEX idx_teams_organization_id ON teams(organization_id);",
            "CREATE INDEX idx_teams_parent_team_id ON teams(parent_team_id);",
            "CREATE INDEX idx_teams_deleted_at ON teams(deleted_at);",
            "CREATE INDEX idx_teams_is_parent ON teams(is_parent);",
            "CREATE INDEX idx_teams_org_parent ON teams(organization_id, parent_team_id);",
            
            "CREATE INDEX idx_team_members_user_id ON team_members(user_id);",
            "CREATE INDEX idx_team_members_team_id ON team_members(team_id);",
            "CREATE INDEX idx_team_members_role_id ON team_members(role_id);",
        ]),
        
        # Add unique constraint for user-team membership
        migrations.AddConstraint(
            model_name='teammember',
            constraint=models.UniqueConstraint(
                fields=['user_id', 'team_id'], 
                name='unique_user_team_membership'
            ),
        ),
    ]