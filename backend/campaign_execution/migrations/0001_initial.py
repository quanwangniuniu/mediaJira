# Generated by Django 4.2.23 on 2025-09-07 22:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_delete_task'),
    ]

    operations = [
        migrations.CreateModel(
            name='CampaignTask',
            fields=[
                ('campaign_task_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('scheduled_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('channel', models.CharField(choices=[('google', 'Google Ads'), ('facebook', 'Facebook Ads'), ('tiktok', 'TikTok Ads'), ('instagram', 'Instagram Ads'), ('youtube', 'YouTube Ads'), ('twitter', 'Twitter Ads')], max_length=32)),
                ('creative_asset_ids', models.JSONField(blank=True, default=list)),
                ('audience_config', models.JSONField(blank=True, default=dict)),
                ('status', django_fsm.FSMField(choices=[('scheduled', 'Scheduled'), ('launched', 'Launched'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], default='scheduled', max_length=50, protected=True)),
                ('platform_status', models.CharField(blank=True, max_length=64, null=True)),
                ('roi_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('external_ids_json', models.JSONField(blank=True, null=True)),
                ('paused_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_campaign_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'campaign_task',
            },
        ),
        migrations.CreateModel(
            name='TaskDependency',
            fields=[
                ('task_dependency_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('predecessor_task_id', models.BigIntegerField()),
                ('relation', models.CharField(default='blocks', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('successor_task', models.ForeignKey(db_column='successor_task_id', on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to='campaign_execution.campaigntask')),
            ],
            options={
                'db_table': 'task_dependency',
                'indexes': [models.Index(fields=['predecessor_task_id', 'successor_task'], name='task_depend_predece_d4bcb6_idx')],
            },
        ),
        migrations.CreateModel(
            name='ROIAlertTrigger',
            fields=[
                ('roi_alert_trigger_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('metric_key', models.CharField(choices=[('roi', 'ROI')], max_length=16)),
                ('comparator', models.CharField(choices=[('<', '<'), ('<=', '<='), ('>', '>'), ('>=', '>='), ('=', '=')], max_length=2)),
                ('threshold', models.DecimalField(decimal_places=4, max_digits=12)),
                ('lookback_minutes', models.PositiveIntegerField(default=60)),
                ('action', models.CharField(choices=[('notify_only', 'NotifyOnly'), ('auto_pause', 'AutoPause')], default='notify_only', max_length=16)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roi_triggers', to='campaign_execution.campaigntask')),
            ],
            options={
                'db_table': 'roi_alert_trigger',
                'indexes': [models.Index(fields=['campaign_task', 'is_active'], name='roi_alert_t_campaig_c56957_idx'), models.Index(fields=['metric_key'], name='roi_alert_t_metric__130b3b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExecutionLog',
            fields=[
                ('execution_log_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('event', models.CharField(choices=[('launch', 'Launch'), ('pause', 'Pause'), ('resume', 'Resume'), ('adjust', 'Adjust'), ('alert_trigger', 'AlertTrigger'), ('metric_ingest', 'MetricIngest'), ('complete', 'Complete'), ('fail', 'Fail')], max_length=32)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('result', models.CharField(choices=[('success', 'Success'), ('error', 'Error')], default='success', max_length=16)),
                ('message', models.CharField(blank=True, max_length=512, null=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('channel_response', models.JSONField(blank=True, null=True)),
                ('actor_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_execution_logs', to=settings.AUTH_USER_MODEL)),
                ('campaign_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='campaign_execution.campaigntask')),
            ],
            options={
                'db_table': 'execution_log',
                'indexes': [models.Index(fields=['campaign_task', '-timestamp'], name='execution_l_campaig_02a959_idx'), models.Index(fields=['event'], name='execution_l_event_625ec4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChannelConfig',
            fields=[
                ('channel_config_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('google', 'Google Ads'), ('facebook', 'Facebook Ads'), ('tiktok', 'TikTok Ads'), ('instagram', 'Instagram Ads'), ('youtube', 'YouTube Ads'), ('twitter', 'Twitter Ads')], max_length=32)),
                ('auth_token', models.TextField(blank=True, null=True)),
                ('settings_json', models.JSONField(blank=True, default=dict)),
                ('last_refreshed', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_configs', to='core.team')),
            ],
            options={
                'db_table': 'channel_config',
                'indexes': [models.Index(fields=['team', 'channel'], name='channel_con_team_id_068a19_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='channelconfig',
            constraint=models.UniqueConstraint(fields=('team', 'channel'), name='uniq_team_channel'),
        ),
        migrations.AddIndex(
            model_name='campaigntask',
            index=models.Index(fields=['channel'], name='campaign_ta_channel_ce183e_idx'),
        ),
        migrations.AddIndex(
            model_name='campaigntask',
            index=models.Index(fields=['status'], name='campaign_ta_status_294faf_idx'),
        ),
        migrations.AddIndex(
            model_name='campaigntask',
            index=models.Index(fields=['created_at'], name='campaign_ta_created_dd2a13_idx'),
        ),
    ]
