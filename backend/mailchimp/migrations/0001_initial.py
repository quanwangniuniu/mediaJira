# Generated by Django 4.2.23 on 2025-10-17 14:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "parent_campaign_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("type", models.CharField(default="regular", max_length=50)),
                ("create_time", models.DateTimeField(blank=True, null=True)),
                ("archive_url", models.URLField(blank=True, null=True)),
                ("long_archive_url", models.URLField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("emails_sent", models.IntegerField(default=0)),
                ("send_time", models.DateTimeField(blank=True, null=True)),
                (
                    "content_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("needs_block_refresh", models.BooleanField(default=False)),
                ("resendable", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignEcommerceSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_orders", models.IntegerField(default=0)),
                ("total_spent", models.FloatField(default=0)),
                ("total_revenue", models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.IntegerField(primary_key=True, serialize=False, unique=True),
                ),
                ("type", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=255)),
                ("drag_and_drop", models.BooleanField(default=False)),
                ("responsive", models.BooleanField(default=False)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                ("date_created", models.DateTimeField(blank=True, null=True)),
                ("date_edited", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=100, null=True)),
                ("edited_by", models.CharField(blank=True, max_length=100, null=True)),
                ("active", models.BooleanField(default=True)),
                ("folder_id", models.CharField(blank=True, max_length=100, null=True)),
                ("thumbnail", models.URLField(blank=True, null=True)),
                ("share_url", models.URLField(blank=True, null=True)),
                ("content_type", models.CharField(max_length=50)),
                ("links", models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TemplateDefaultContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sections", models.JSONField()),
                ("links", models.JSONField(blank=True, null=True)),
                (
                    "template",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_content",
                        to="mailchimp.template",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignVariateSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "winning_combination_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "winning_campaign_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "winner_criteria",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("wait_time", models.IntegerField(default=0)),
                ("test_size", models.IntegerField(default=0)),
                ("subject_lines", models.JSONField(blank=True, null=True)),
                ("send_times", models.JSONField(blank=True, null=True)),
                ("from_names", models.JSONField(blank=True, null=True)),
                ("reply_to_addresses", models.JSONField(blank=True, null=True)),
                ("contents", models.JSONField(blank=True, null=True)),
                ("combinations", models.JSONField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variate_settings",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opens", models.BooleanField(default=True)),
                ("html_clicks", models.BooleanField(default=True)),
                ("text_clicks", models.BooleanField(default=True)),
                ("goal_tracking", models.BooleanField(default=True)),
                ("ecomm360", models.BooleanField(default=True)),
                (
                    "google_analytics",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("clicktale", models.CharField(blank=True, max_length=255, null=True)),
                ("salesforce", models.JSONField(blank=True, null=True)),
                ("capsule", models.JSONField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignSocialCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_card",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subject_line",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "preview_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("from_name", models.CharField(blank=True, max_length=255, null=True)),
                ("reply_to", models.EmailField(blank=True, max_length=254, null=True)),
                ("use_conversation", models.BooleanField(default=True)),
                ("to_name", models.CharField(blank=True, max_length=255, null=True)),
                ("folder_id", models.CharField(blank=True, max_length=100, null=True)),
                ("authenticate", models.BooleanField(default=True)),
                ("auto_footer", models.BooleanField(default=True)),
                ("inline_css", models.BooleanField(default=True)),
                ("auto_tweet", models.BooleanField(default=True)),
                ("auto_fb_post", models.JSONField(blank=True, null=True)),
                ("fb_comments", models.BooleanField(default=True)),
                ("timewarp", models.BooleanField(default=True)),
                ("drag_and_drop", models.BooleanField(default=False)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="mailchimp.campaign",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mailchimp.template",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignRSSOptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feed_url", models.URLField(blank=True, null=True)),
                ("frequency", models.CharField(blank=True, max_length=50, null=True)),
                ("schedule", models.JSONField(blank=True, null=True)),
                ("last_sent", models.DateTimeField(blank=True, null=True)),
                ("constrain_rss_img", models.BooleanField(default=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rss_opts",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignResendShortcutUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shortcut_campaigns", models.JSONField(blank=True, null=True)),
                ("original_campaign", models.JSONField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resend_shortcut_usage",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignResendShortcutEligibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("to_non_openers", models.JSONField(blank=True, null=True)),
                ("to_new_subscribers", models.JSONField(blank=True, null=True)),
                ("to_non_clickers", models.JSONField(blank=True, null=True)),
                ("to_non_purchasers", models.JSONField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resend_shortcut_eligibility",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignReportSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opens", models.IntegerField(default=0)),
                ("unique_opens", models.IntegerField(default=0)),
                ("open_rate", models.FloatField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("subscriber_clicks", models.IntegerField(default=0)),
                ("click_rate", models.FloatField(default=0)),
                ("ecommerce", models.JSONField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_summary",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignRecipients",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("list_id", models.CharField(max_length=100)),
                ("list_is_active", models.BooleanField(default=True)),
                ("list_name", models.CharField(max_length=200)),
                ("segment_text", models.TextField(blank=True, null=True)),
                ("segment_opts", models.JSONField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipients",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignDeliveryStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("can_cancel", models.BooleanField(default=True)),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("emails_sent", models.IntegerField(default=0)),
                ("emails_canceled", models.IntegerField(default=0)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_status",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampaignABSplitOptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("split_test", models.CharField(blank=True, max_length=50, null=True)),
                ("pick_winner", models.CharField(blank=True, max_length=50, null=True)),
                ("wait_units", models.CharField(blank=True, max_length=50, null=True)),
                ("wait_time", models.IntegerField(default=0)),
                ("split_size", models.FloatField(default=1)),
                (
                    "from_name_a",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "from_name_b",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reply_email_a",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "reply_email_b",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("subject_a", models.CharField(blank=True, max_length=255, null=True)),
                ("subject_b", models.CharField(blank=True, max_length=255, null=True)),
                ("send_time_a", models.DateTimeField(blank=True, null=True)),
                ("send_time_b", models.DateTimeField(blank=True, null=True)),
                ("send_time_winner", models.DateTimeField(blank=True, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ab_split_opts",
                        to="mailchimp.campaign",
                    ),
                ),
            ],
        ),
    ]
