# Generated by Django 4.2.23 on 2025-08-09 08:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', django_fsm.FSMField(choices=[('NotSubmitted', 'Not Submitted'), ('PendingReview', 'Pending Review'), ('UnderReview', 'Under Review'), ('Approved', 'Approved'), ('RevisionRequired', 'Revision Required'), ('Archived', 'Archived')], default='NotSubmitted', help_text='Current state of the asset in the review workflow', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list, help_text='List of tags for the asset')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='Reference to User', on_delete=django.db.models.deletion.CASCADE, related_name='owned_assets', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, help_text='Reference to Task', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='core.task')),
                ('team', models.ForeignKey(blank=True, help_text='Reference to Team', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='core.team')),
            ],
            options={
                'db_table': 'assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssetVersion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('version_number', models.IntegerField()),
                ('file', models.FileField(blank=True, help_text='Uploaded file', max_length=500, null=True, upload_to='assets/%Y/%m/%d/')),
                ('checksum', models.CharField(blank=True, help_text='SHA-256 checksum of the file', max_length=64)),
                ('version_status', django_fsm.FSMField(choices=[('Draft', 'Draft'), ('Finalized', 'Finalized')], default='Draft', help_text='Version status in the workflow', max_length=20)),
                ('scan_status', django_fsm.FSMField(choices=[('pending', 'Pending'), ('scanning', 'Scanning'), ('clean', 'Clean'), ('infected', 'Infected'), ('error', 'Error')], default='pending', help_text='Virus scan status', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='asset.asset')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_versions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'asset_versions',
                'ordering': ['-version_number'],
                'unique_together': {('asset', 'version_number')},
            },
        ),
        migrations.CreateModel(
            name='AssetVersionStateTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_version_status', models.CharField(blank=True, choices=[('Draft', 'Draft'), ('Finalized', 'Finalized')], max_length=20, null=True)),
                ('to_version_status', models.CharField(blank=True, choices=[('Draft', 'Draft'), ('Finalized', 'Finalized')], max_length=20, null=True)),
                ('from_scan_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('scanning', 'Scanning'), ('clean', 'Clean'), ('infected', 'Infected'), ('error', 'Error')], max_length=20, null=True)),
                ('to_scan_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('scanning', 'Scanning'), ('clean', 'Clean'), ('infected', 'Infected'), ('error', 'Error')], max_length=20, null=True)),
                ('transition_method', models.CharField(help_text='Name of the transition method called', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data about the transition')),
                ('asset_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_transitions', to='asset.assetversion')),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'asset_version_state_transitions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AssetStateTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_state', models.CharField(choices=[('NotSubmitted', 'Not Submitted'), ('PendingReview', 'Pending Review'), ('UnderReview', 'Under Review'), ('Approved', 'Approved'), ('RevisionRequired', 'Revision Required'), ('Archived', 'Archived')], max_length=20)),
                ('to_state', models.CharField(choices=[('NotSubmitted', 'Not Submitted'), ('PendingReview', 'Pending Review'), ('UnderReview', 'Under Review'), ('Approved', 'Approved'), ('RevisionRequired', 'Revision Required'), ('Archived', 'Archived')], max_length=20)),
                ('transition_method', models.CharField(help_text='Name of the transition method called', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data about the transition')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_transitions', to='asset.asset')),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'asset_state_transitions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AssetComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='asset.asset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'asset_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('reviewer', 'Reviewer'), ('approver', 'Approver')], max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('valid_until', models.DateTimeField(blank=True, help_text='Assignment expiry date', null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='asset.asset')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_reviews', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review_assignments',
                'ordering': ['-assigned_at'],
                'unique_together': {('asset_id', 'user_id', 'role')},
            },
        ),
    ]
