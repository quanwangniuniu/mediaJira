openapi: 3.1.0
info:
  title: Budget Approval API
  version: 1.0.0
  description: API specification for multi-stage budget approval with real-time tracking.
servers:
  - url: http://localhost:8000/

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    internalWebhook:
      type: apiKey
      in: header
      name: X-Internal-Token
      description: >
        Internal webhook authentication token. Required for system-to-system webhook endpoints.
        This token is configured via INTERNAL_WEBHOOK_TOKEN environment variable.

  parameters:
    XUserRole:
      name: x-user-role
      in: header
      required: true
      schema:
        type: string
      description: >
        Role of the user used for permission evaluation. Required for all users.
    XTeamId:
      name: x-team-id
      in: header
      required: false
      schema:
        type: string
      description: >
        Optional team context. Required only when user belongs to a team and the endpoint operates in a team scope.
  schemas:
    BudgetRequest:
      type: object
      required: [task, amount, currency, current_approver, ad_channel]
      properties:
        id:
          type: integer
          readOnly: true
          description: ID of the budget request
        task:
          type: integer
          description: ID of the associated task
        requested_by:
          type: integer
          readOnly: true
          description: ID of the user who submitted the request (inferred from token)
        amount:
          type: string
          format: decimal
          pattern: '^\d+\.\d{2}$'
          description: Requested budget amount (decimal with 2 places)
          example: "1000.00"
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: AUD
        status:
          type: string
          enum: [DRAFT, SUBMITTED, UNDER_REVIEW, APPROVED, REJECTED, LOCKED]
          readOnly: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
        is_escalated:
          type: boolean
          readOnly: true
        budget_pool:
          type: integer
          readOnly: true
          description: ID of the budget pool the request belongs to (automatically determined from task, ad_channel, and currency)
        notes:
          type: string
          nullable: true
          description: Optional notes provided by the submitter
        current_approver:
          type: integer
          description: ID of the current approver
        ad_channel:
          type: integer
          description: ID of the ad channel

    BudgetPool:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: ID of the budget pool
        project:
          type: integer
          description: ID of the project
        ad_channel:
          type: integer
          description: ID of the ad channel
        total_amount:
          type: string
          format: decimal
          pattern: '^\d+\.\d{2}$'
          description: Total amount of the budget pool
          example: "10000.00"
        used_amount:
          type: string
          format: decimal
          pattern: '^\d+\.\d{2}$'
          description: Used amount of the budget pool
          example: "5000.00"
        currency:
          type: string
          description: Currency of this budget pool
          example: AUD
        available_amount:
          type: string
          format: decimal
          pattern: '^\d+\.\d{2}$'
          readOnly: true
          description: Available amount of the budget pool
          example: "5000.00"

    ApprovalDecision:
      type: object
      required: [decision, comment]
      properties:
        decision:
          type: string
          enum: [approve, reject]
        comment:
          type: string
        next_approver:
          type: integer
          nullable: true
          description: ID of the next approver

    ApprovalRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: ID of the approval record
        budget_request:
          type: integer
          readOnly: true
          description: ID of the budget request
        approved_by:
          type: integer
          readOnly: true
          description: ID of the user who made the decision
        is_approved:
          type: boolean
          readOnly: true
          description: Whether the request was approved at this stage
        comment:
          type: string
          readOnly: true
          description: Approval or rejection reason
        decided_at:
          type: string
          format: date-time
          readOnly: true
          description: When the decision was made
        step_number:
          type: integer
          readOnly: true
          description: The step number of the approval record

    ReallocateRequest:
      type: object
      required: [amount, currency]
      properties:
        amount:
          type: string
          format: decimal
          pattern: '^\d+\.\d{2}$'
          description: Amount of money to reallocate
          example: "1000.00"
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: AUD
          description: Currency of the reallocation
        comment:
          type: string
          nullable: true
          description: Optional reason or note for reallocation

  x-approval-policies:
    standardPolicy:
      description: Placeholder policy. Values configurable post-deployment.
      stages:
        - stage: 1
          role: team_leader
          threshold: 10000
        - stage: 2
          role: org_admin
          threshold: 20000

paths:
  /budgets/requests/:
    post:
      summary: Submit a new budget request
      parameters:
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetRequest"
            examples:
              over-threshold:
                summary: Over threshold request
                value:
                  task_id: 123
                  amount: 25000
                  currency: AUD
                  budget_pool_id: 2
                  notes: "Urgent ad-hoc campaign"
      responses:
        "201":
          description: Budget request created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetRequest"
        "400":
          description: Invalid input
        "403":
          description: Forbidden
        "500":
          description: Server error
      x-approval-policy:
        $ref: "#/components/x-approval-policies/standardPolicy"

  /budgets/requests/{id}:
    get:
      summary: View a budget request
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      responses:
        "200":
          description: Budget request details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetRequest"
        "403":
          description: User does not have permission to view this request
        "404":
          description: Budget request ID not found
    put:
      summary: Update a budget request
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetRequest"
      responses:
        "200":
          description: Budget request updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetRequest"
        "400":
          description: Validation error or invalid input
        "403":
          description: User does not have permission to modify this request
        "404":
          description: Budget request not found

  /budgets/requests/{id}/decision:
    patch:
      summary: Approve or reject a budget request
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApprovalDecision"
            examples:
              deny-request:
                summary: Decision to reject a request
                value:
                  decision: reject
                  comment: "Insufficient justification for high expense"
      responses:
        "200":
          description: Decision recorded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetRequest"
        "400":
          description: Invalid input or decision format
        "403":
          description: User does not have permission to make this decision
        "404":
          description: Budget request not found
        "409":
          description: Decision not allowed in current status or stage
      x-approval-policy:
        $ref: "#/components/x-approval-policies/standardPolicy"

  /budgets/requests:
    get:
      summary: List all budget requests
      parameters:
        - name: team_id
          in: query
          required: false
          schema:
            type: integer
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      responses:
        "200":
          description: List of budget requests
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: "#/components/schemas/BudgetRequest"
        "403":
          description: User does not have permission to view requests for this team
        "400":
          description: Invalid query parameter

  /budgets/pools/:
    get:
      summary: List all budget pools
      parameters:
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      responses:
        "200":
          description: List of budget pools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BudgetPool"
        "403":
          description: User does not have permission to view budget pools

  /budgets/pools/{id}:
    get:
      summary: View a specific budget pool
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      responses:
        "200":
          description: Budget pool details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetPool"
        "403":
          description: User does not have permission to view this budget pool
        "404":
          description: Budget pool not found

  /budgets/pools/{id}/reallocate:
    patch:
      summary: Reallocate funds in a budget pool
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/XUserRole"
        - $ref: "#/components/parameters/XTeamId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReallocateRequest"
      responses:
        "200":
          description: Funds reallocated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetPool"
        "400":
          description: Invalid input
        "403":
          description: User does not have permission to reallocate funds
        "404":
          description: Budget pool not found

  /budgets/escalate/:
    post:
      summary: Auto-Escalation Webhook (internal only)
      description: >
        This endpoint is triggered internally by the system when a budget request exceeds its threshold. 
        This is a system-to-system webhook that requires internal authentication via X-Internal-Token header.
        No JWT authentication or user role headers are required.
      security:
        - internalWebhook: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [budget_request_id, triggered_at]
              properties:
                budget_request_id:
                  type: integer
                  description: ID of the budget request being escalated
                  example: 123
                triggered_at:
                  type: string
                  format: date-time
                  description: Timestamp of the escalation trigger
                  example: "2024-01-01T10:00:00Z"
            examples:
              escalation_trigger:
                summary: Budget request escalation trigger
                value:
                  budget_request_id: 123
                  triggered_at: "2024-01-01T10:00:00Z"
      responses:
        "200":
          description: Escalation successfully triggered
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Escalation triggered successfully"
                  budget_request_id:
                    type: integer
                    example: 123
        "400":
          description: Invalid input data or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid budget_request_id"
        "401":
          description: Missing or invalid internal authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing X-Internal-Token header"
        "403":
          description: Internal webhook feature is disabled or access denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal webhook access denied: feature is disabled"
        "404":
          description: Budget request not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Budget request with ID 123 not found"
        "500":
          description: Internal server error during escalation processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to process escalation"
