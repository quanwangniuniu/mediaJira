openapi: 3.1.0
info:
  title: Asset Review Service API
  version: 1.0.0
  description: |
    API specification for managing assets, versions, reviews, and comments.
    
    ## Asset Workflow
    Assets follow a Finite State Machine (FSM) workflow:
    - **NotSubmitted** → **PendingReview** (via submit)
    - **PendingReview** → **UnderReview** (via start_review)
    - **UnderReview** → **Approved** (via approve)
    - **UnderReview** → **RevisionRequired** (via reject)
    - **RevisionRequired** → **NotSubmitted** (via acknowledge_rejection)
    - **Approved** → **Archived** (via archive)
    
    The `status` field is read-only and managed by FSM transitions.
servers:
  - url: http://localhost:8000/
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PaginatedResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of items available.
        page:
          type: integer
          description: Current page number.
        page_size:
          type: integer
          description: Number of items per page.
        results:
          type: array
          items:
            type: object  # You can override this with a specific schema per endpoint
    HistoryItem:
      type: object
      properties:
        type:
          type: string
          enum: [asset_created, state_transition, version_uploaded, comment_added, review_assigned]
          description: Type of history event
        timestamp:
          type: string
          format: date-time
          description: When the event occurred
        user_id:
          type: integer
          nullable: true
          description: ID of the user who triggered the event (null for system events)
        details:
          type: object
          description: Event-specific details
          additionalProperties: true
    CommentItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the comment
        asset:
          type: integer
          description: Reference to the asset being commented on (read-only)
        user:
          type: integer
          description: Reference to the user who created the comment (read-only)
        body:
          type: string
          description: Comment text content
        created_at:
          type: string
          format: date-time
          description: Timestamp when the comment was created
    ReviewAssignmentItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the review assignment
        asset:
          type: integer
          description: Reference to the asset (read-only)
        user:
          type: integer
          description: Reference to the assigned user
        role:
          type: string
          enum: [reviewer, approver]
          description: Role assigned to the user
        assigned_by:
          type: integer
          description: Reference to the user who made the assignment (read-only)
        assigned_at:
          type: string
          format: date-time
          description: When the assignment was created (read-only)
        valid_until:
          type: string
          format: date-time
          nullable: true
          description: Optional expiry date for the assignment
    AssetItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the asset
        task:
          type: integer
          description: Reference to the associated task
        owner:
          type: integer
          description: Reference to the asset owner (auto-set to current user)
        team:
          type: integer
          description: Reference to the team
        status:
          type: string
          enum: [NotSubmitted, PendingReview, UnderReview, Approved, RevisionRequired, Archived]
          description: Current state of the asset in the review workflow (read-only, managed by FSM)
        tags:
          type: array
          items:
            type: string
          description: List of tags for categorizing the asset
        created_at:
          type: string
          format: date-time
          description: Timestamp when the asset was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the asset was last updated
    AssetVersionItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the asset version
        asset:
          type: integer
          description: Reference to the parent asset (read-only)
        version_number:
          type: integer
          description: Version number (auto-incremented, read-only)
        file:
          type: string
          format: uri
          nullable: true
          description: URL to the uploaded file (null if no file was uploaded)
        uploaded_by:
          type: integer
          description: Reference to the user who uploaded this version (read-only)
        checksum:
          type: string
          nullable: true
          description: SHA-256 checksum of the file (auto-calculated for uploaded files)
        version_status:
          type: string
          enum: [Draft, Finalized]
          description: Current status of the version in the workflow
        scan_status:
          type: string
          enum: [pending, scanning, clean, infected, error]
          description: Current scan status of the file
        created_at:
          type: string
          format: date-time
          description: Timestamp when the version was created
paths: 
  /assets:
    get:
      summary: List all assets
      description: Retrieve a paginated list of all assets with optional filtering.
      tags:
        - Asset
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 5
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of assets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetItem'
              example:
                count: 150
                page: 1
                page_size: 5
                results:
                  - id: 101
                    task: 1001
                    owner: 1
                    team: 1
                    status: "NotSubmitted"
                    tags: ["summer", "video", "client-A"]
                    created_at: "2025-07-25T10:15:00Z"
                    updated_at: "2025-07-25T10:15:00Z"
                  - id: 102
                    task: 1002
                    owner: 2
                    team: 1
                    status: "PendingReview"
                    tags: ["Q3", "design", "high-priority"]
                    created_at: "2025-07-20T09:00:00Z"
                    updated_at: "2025-07-25T10:20:00Z"
        '401':
          description: Unauthorized
    post:
      summary: Create a new asset
      description: Create a new asset with initial metadata and owner/team info. Status will always be set to "NotSubmitted".
      tags:
        - Asset
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - task
                - team
              properties:
                task:
                  type: integer
                  description: Reference to the associated task
                team:
                  type: integer
                  description: Reference to the team
                tags:
                  type: array
                  items:
                    type: string
                  description: List of tags for categorizing the asset
            example:
              task: 1001
              team: 1
              tags: ["summer", "video", "client-A"]
      responses:
        '201':
          description: Asset created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
              example:
                id: 101
                task: 1001
                owner: 1
                team: 1
                status: "NotSubmitted"
                tags: ["summer", "video", "client-A"]
                created_at: "2025-07-25T10:15:00Z"
                updated_at: "2025-07-25T10:15:00Z"
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /assets/{id}:
    get:
      summary: Get an asset by ID
      description: Retrieve details of a specific asset by its ID.
      tags:
        - Asset
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the asset to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Asset details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
              example:
                id: 101
                task: 1001
                owner: 1
                team: 1
                status: "UnderReview"
                tags: ["Q3", "design", "high-priority"]
                created_at: "2025-07-20T09:00:00Z"
                updated_at: "2025-07-25T10:20:00Z"
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
    put:
      summary: Update an asset by ID
      description: Modify the metadata or tags of a specific asset.
      tags:
        - Asset
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: integer
                  description: Reference to the associated task
                team:
                  type: integer
                  description: Reference to the team
                tags:
                  type: array
                  items:
                    type: string
                  description: List of tags for categorizing the asset
            example:
              task: 1001
              team: 1
              tags: ["Q3", "client-B", "urgent"]
      responses:
        '200':
          description: Asset updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
              example:
                id: 101
                task: 1001
                owner: 1
                team: 1
                status: "NotSubmitted"
                tags: ["Q3", "client-B", "urgent"]
                created_at: "2025-07-20T09:00:00Z"
                updated_at: "2025-07-25T12:00:00Z"
        '400':
          description: Invalid update data
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
    delete:
      summary: Delete an asset by ID
      description: Soft delete or archive an asset from the system.
      tags:
        - Asset
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to delete
      responses:
        '204':
          description: Asset deleted successfully (no content)
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/{id}/submit:
    put:
      summary: Submit an asset for review
      description: Change the asset's status from 'NotSubmitted' to 'PendingReview' and initiate the review workflow.
      tags:
        - Review
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to submit
      responses:
        '200':
          description: Asset submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Success message
                  status:
                    type: string
                    enum: [PendingReview]
                    description: New status after submission
              example:
                detail: "Asset submitted for review."
                status: "PendingReview"
        '400':
          description: Invalid submission
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/{id}/acknowledge:
    post:
      summary: Acknowledge rejection
      description: Change the asset's status from 'RevisionRequired' to 'NotSubmitted' to allow further editing.
      tags:
        - Review
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to acknowledge rejection for
      responses:
        '200':
          description: Rejection acknowledged successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Success message
                  status:
                    type: string
                    enum: [NotSubmitted]
                    description: New status after acknowledgement
              example:
                detail: "Rejection acknowledged. Asset returned to editing state."
                status: "NotSubmitted"
        '400':
          description: Invalid acknowledgement
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/{asset_id}/versions:
    get:
      summary: List asset versions
      description: Retrieve a paginated list of all versions for a specific asset.
      tags:
        - AssetVersion
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to list versions for
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of asset versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetVersionItem'
              example:
                count: 3
                next: null
                previous: null
                results:
                  - id: 301
                    asset: 101
                    version_number: 1
                    file: "/media/assets/2025/07/25/asset_101_v1.mp4"
                    uploaded_by: 1
                    checksum: "abc123def456789"
                    version_status: "Finalized"
                    scan_status: "clean"
                    created_at: "2025-07-25T10:15:00Z"
                  - id: 302
                    asset: 101
                    version_number: 2
                    file: "/media/assets/2025/07/25/asset_101_v2.mp4"
                    uploaded_by: 1
                    checksum: "def456ghi789012"
                    version_status: "Draft"
                    scan_status: "pending"
                    created_at: "2025-07-25T13:00:00Z"
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
    post:
      summary: Upload a new version for an asset
      description: Add a new version of an existing asset with file upload. Version number is auto-incremented.
      tags:
        - AssetVersion
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to upload a new version for
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
            example:
              file: "(binary file data)"
      responses:
        '201':
          description: Asset version created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetVersionItem'
              example:
                id: 303
                asset: 101
                version_number: 3
                file: "/media/assets/2025/07/25/asset_101_v3.mp4"
                uploaded_by: 1
                checksum: "ghi789jkl012345"
                version_status: "Draft"
                scan_status: "pending"
                created_at: "2025-07-25T14:00:00Z"
        '400':
          description: Invalid version data
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/{asset_id}/versions/{version_id}:
    put:
      summary: Update a specific asset version
      description: Update metadata or file for a specific asset version. Only draft versions can be updated.
      tags:
        - AssetVersion
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the version to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: New file to upload (optional)
            example:
              file: "(binary file data)"
      responses:
        '200':
          description: Asset version updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetVersionItem'
        '400':
          description: Invalid update data or version is finalized
        '404':
          description: Asset or version not found
        '401':
          description: Unauthorized
    delete:
      summary: Delete a specific asset version
      description: Physically delete a specific asset version. Only draft versions can be deleted.
      tags:
        - AssetVersion
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the version to delete
      responses:
        '204':
          description: Asset version deleted successfully (no content)
        '400':
          description: Version is finalized and cannot be deleted
        '404':
          description: Asset or version not found
        '401':
          description: Unauthorized
  /assets/{asset_id}/versions/{version_id}/publish:
    post:
      summary: Publish an asset version
      description: Change the version status from 'Draft' to 'Finalized'.
      tags:
        - AssetVersion
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the version to publish
      responses:
        '200':
          description: Version published successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Success message
                  version_status:
                    type: string
                    enum: [Finalized]
                    description: New version status
              example:
                detail: "Version published successfully."
                version_status: "Finalized"
        '400':
          description: Version is already finalized
        '404':
          description: Asset or version not found
        '401':
          description: Unauthorized
  /assets/{asset_id}/versions/{version_id}/download:
    get:
      summary: Download a specific asset version
      description: Retrieve download information for a specific asset version.
      tags:
        - AssetVersion
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the version to download
      responses:
        '200':
          description: Download information
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset_id:
                    type: integer
                    description: ID of the asset
                  version_number:
                    type: integer
                    description: Version number
                  file_name:
                    type: string
                    description: Name of the file
                  download_url:
                    type: string
                    format: uri
                    description: URL to download the file
                  checksum:
                    type: string
                    nullable: true
                    description: SHA-256 checksum of the file
                  scan_status:
                    type: string
                    enum: [pending, scanning, clean, infected, error]
                    description: Virus scan status
                  uploaded_at:
                    type: string
                    format: date-time
                    description: When the version was uploaded
                  uploaded_by:
                    type: string
                    description: Username of who uploaded the version
              example:
                asset_id: 1
                version_number: 2
                file_name: "summer_campaign_v2.mp4"
                download_url: "https://example.com/media/assets/2025/07/25/summer_campaign_v2.mp4"
                checksum: "abc123def456789"
                scan_status: "clean"
                uploaded_at: "2025-07-25T14:00:00Z"
                uploaded_by: "creator"
        '404':
          description: Asset, version, or file not found
        '401':
          description: Unauthorized
  /assets/{asset_id}/assignments:
    get:
      summary: List review assignments for an asset
      description: Retrieve all review assignments for a specific asset.
      tags:
        - Review
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to get assignments for
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 2
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of review assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReviewAssignmentItem'
              example:
                count: 2
                next: null
                previous: null
                results:
                  - id: 1
                    asset: 1
                    user: 3
                    role: "reviewer"
                    assigned_by: 2
                    assigned_at: "2025-07-25T13:00:00Z"
                    valid_until: null
                  - id: 2
                    asset: 1
                    user: 4
                    role: "approver"
                    assigned_by: 2
                    assigned_at: "2025-07-25T13:30:00Z"
                    valid_until: "2025-08-01T23:59:59Z"
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
    post:
      summary: Assign reviewers or approvers to an asset
      description: Assign a user as a reviewer or approver to the asset.
      tags:
        - Review
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to assign reviewers to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - role
              properties:
                user:
                  type: integer
                  description: ID of the user to assign
                role:
                  type: string
                  enum: [reviewer, approver]
                  description: Role to assign
                valid_until:
                  type: string
                  format: date-time
                  description: Optional expiry date for the assignment
            example:
              user: 3
              role: "reviewer"
              valid_until: "2025-08-01T23:59:59Z"
      responses:
        '201':
          description: Assignment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewAssignmentItem'
              example:
                id: 1
                asset: 1
                user: 3
                role: "reviewer"
                assigned_by: 1
                assigned_at: "2025-07-25T13:00:00Z"
                valid_until: "2025-08-01T23:59:59Z"
        '400':
          description: Invalid assignment data
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/{id}/review:
    patch:
      summary: Submit a review action for an asset
      description: Reviewer or approver updates the asset's review status.
      tags:
        - Review
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset being reviewed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum: [approve, reject, start_review, submit, acknowledge_rejection, archive]
                  description: Review action to perform
                comment:
                  type: string
                  description: Optional comment for the review
            example:
              action: "approve"
              comment: "This asset meets all criteria."
      responses:
        '200':
          description: Review action submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Success message
                  status:
                    type: string
                    enum: [NotSubmitted, PendingReview, UnderReview, Approved, RevisionRequired, Archived]
                    description: New status after review action
              example:
                detail: "Asset approved successfully."
                status: "Approved"
        '400':
          description: Invalid action or role
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/bulk-review:
    post:
      summary: Bulk review multiple assets
      description: Submit review actions for multiple assets in one request.
      tags:
        - Review
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reviews
              properties:
                reviews:
                  type: array
                  items:
                    type: object
                    required:
                      - asset_id
                      - action
                    properties:
                      asset_id:
                        type: integer
                        description: ID of the asset to review
                      action:
                        type: string
                        enum: [approve, reject, start_review, submit, acknowledge_rejection, archive]
                        description: Review action to perform
                      comment:
                        type: string
                        description: Optional comment for the review
            example:
              reviews:
                - asset_id: 1
                  action: "approve"
                  comment: "Well done"
                - asset_id: 2
                  action: "reject"
                  comment: "Missing required fields"
      responses:
        '200':
          description: Bulk review completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        asset_id:
                          type: integer
                        status:
                          type: string
                          enum: [approved, rejected, review_started, submitted, acknowledged, archived, failed]
                        message:
                          type: string
                        new_status:
                          type: string
                          nullable: true
                  summary:
                    type: object
                    properties:
                      total:
                        type: integer
                      successful:
                        type: integer
                      failed:
                        type: integer
              example:
                results:
                  - asset_id: 1
                    status: "approved"
                    message: "Asset approved successfully."
                    new_status: "Approved"
                  - asset_id: 2
                    status: "rejected"
                    message: "Asset rejected successfully."
                    new_status: "RevisionRequired"
                summary:
                  total: 2
                  successful: 2
                  failed: 0
        '400':
          description: Invalid review data
        '401':
          description: Unauthorized
  /assets/{asset_id}/comments:
    get:
      summary: List comments for an asset
      description: Retrieve a paginated list of all comments for a specific asset.
      tags:
        - Comment
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to retrieve comments for
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 2
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommentItem'
              example:
                count: 2
                next: null
                previous: null
                results:
                  - id: 9001
                    asset: 101
                    user: 1
                    body: "Great work on this asset! The lighting looks much better."
                    created_at: "2025-07-25T14:40:00Z"
                  - id: 9002
                    asset: 101
                    user: 2
                    body: "I suggest updating the intro title and trimming the end."
                    created_at: "2025-07-25T15:20:00Z"
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
    post:
      summary: Add a comment to an asset
      description: Add a comment to a specific asset for review or discussion.
      tags:
        - Comment
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset being commented on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - body
              properties:
                body:
                  type: string
                  description: Comment text
            example:
              body: "I suggest updating the intro title and trimming the end."
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentItem'
              example:
                id: 9001
                asset: 101
                user: 1
                body: "I suggest updating the intro title and trimming the end."
                created_at: "2025-07-25T14:40:00Z"
        '400':
          description: Invalid comment data
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /assets/{asset_id}/history:
    get:
      summary: Get asset activity history
      description: Retrieve the complete history of an asset including state transitions, version uploads, comments, and review assignments.
      tags:
        - History
      security:
        - bearerAuth: []
      parameters:
        - name: asset_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the asset to retrieve history for
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 2
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Paginated asset history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoryItem'
              example:
                count: 6
                next: null
                previous: null
                results:
                  - type: "comment_added"
                    timestamp: "2025-07-25T15:20:00Z"
                    user_id: 2
                    details:
                      comment_id: 2
                      body: "I suggest updating the intro title and trimming the end."
                  - type: "version_uploaded"
                    timestamp: "2025-07-25T14:00:00Z"
                    user_id: 1
                    details:
                      version_number: 1
                      file_url: "https://example.com/assets/1/v1.mp4"
                      checksum: "abc123def4561"
                      scan_status: "clean"
                  - type: "state_transition"
                    timestamp: "2025-07-25T13:30:00Z"
                    user_id: 1
                    details:
                      from_state: "NotSubmitted"
                      to_state: "PendingReview"
                      transition_method: "submit"
                      metadata: {"action": "submitted_for_review"}
                  - type: "review_assigned"
                    timestamp: "2025-07-25T13:00:00Z"
                    user_id: 2
                    details:
                      assigned_user_id: 3
                      role: "reviewer"
                      valid_until: null
                  - type: "comment_added"
                    timestamp: "2025-07-25T12:40:00Z"
                    user_id: 3
                    details:
                      comment_id: 1
                      body: "Great work on the color scheme!"
                  - type: "asset_created"
                    timestamp: "2025-07-25T10:15:00Z"
                    user_id: 1
                    details:
                      asset_id: 1
                      task_title: "Summer Campaign Video"
                      team_name: "Video Production"
                      status: "NotSubmitted"
        '404':
          description: Asset not found
        '401':
          description: Unauthorized
  /ws/assets/{id}:
    x-websocket: true
    summary: WebSocket connection for real-time asset updates
    description: >
      Establishes a WebSocket connection to receive real-time updates
      about a specific asset. Events include status changes, version uploads,
      and new comments.
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID of the asset to subscribe to
    x-websocket-events:
      statusChanged:
        description: Asset status was changed (e.g., from NotSubmitted to PendingReview)
        example:
          event: "statusChanged"
          asset_id: 101
          from: "NotSubmitted"
          to: "PendingReview"
          changed_by: 1
          timestamp: "2025-07-25T14:00:00Z"
      versionUploaded:
        description: A new version of the asset was uploaded
        example:
          event: "versionUploaded"
          asset_id: 101
          version_number: 3
          uploaded_by: 3
          timestamp: "2025-07-25T14:05:00Z"
      commentAdded:
        description: A new comment was added to the asset
        example:
          event: "commentAdded"
          asset_id: 101
          comment_id: 9002
          user_id: 201
          body: "Please fix the audio issue"
          timestamp: "2025-07-25T14:15:00Z"
      reviewAssigned:
        description: A review assignment was created for the asset
        example:
          event: "reviewAssigned"
          asset_id: 101
          assigned_user_id: 3
          role: "reviewer"
          assigned_by: 2
          timestamp: "2025-07-25T13:00:00Z"
      versionPublished:
        description: A version was published (status changed from Draft to Finalized)
        example:
          event: "versionPublished"
          asset_id: 101
          version_number: 3
          published_by: 7
          file_name: "asset_101_v3.mp4"
          timestamp: "2025-07-25T14:06:00Z"
      versionScanStarted:
        description: Virus scanning started for a version
        example:
          event: "versionScanStarted"
          asset_id: 101
          version_id: 303
          version_number: 3
          timestamp: "2025-07-25T14:06:10Z"
      versionScanCompleted:
        description: Virus scanning completed for a version
        example:
          event: "versionScanCompleted"
          asset_id: 101
          version_id: 303
          version_number: 3
          scan_status: "clean"
          scan_result: "no threats found"
          timestamp: "2025-07-25T14:07:30Z"